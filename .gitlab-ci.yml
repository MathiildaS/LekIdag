image: node:20

stages:
  - build
  - test
  - deploy

# Frontend
frontend-lint:
  stage: test
  script:
    - cd project-lekidag-frontend
    - npm ci
    - npm run lint

frontend-build:
  stage: build
  script:
    - cd project-lekidag-frontend
    - npm ci
    - npm run build

# Backend
backend-lint:
  stage: test
  script:
    - cd project-lekidag-backend
    - npm ci
    - npm run lint

backend-tests:
  stage: test
  variables:
    OPENWEATHER_API_KEY: $OPENWEATHER_API_KEY
    DB_CONNECTION_STRING: $DB_CONNECTION_STRING
    JWT_PRIVATE_KEY: $JWT_PRIVATE_KEY
    JWT_PUBLIC_KEY: $JWT_PUBLIC_KEY
  script:
    - cd project-lekidag-backend
    - npm ci
    - npm run test

# Deploy
deploy:
  stage: deploy
  script:
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
    - chmod 600 ~/.ssh/id_ed25519
    - ssh-keyscan -H "$PRODUCTION_HOST" >> ~/.ssh/known_hosts
    - |
      ssh ubuntu@"$PRODUCTION_HOST" "
        cd /var/www/lekidag/project-lekidag &&
        git pull &&

        # Write to .env
        echo \"JWT_PRIVATE_KEY=$JWT_PRIVATE_KEY\" > .env &&
        echo \"JWT_PUBLIC_KEY=$JWT_PUBLIC_KEY\" >> .env &&
        echo \"DB_CONNECTION_STRING=$DB_CONNECTION_STRING\" >> .env &&
        echo \"OPENWEATHER_API_KEY=$OPENWEATHER_API_KEY\" >> .env &&
        echo \"PORT=5000\" >> .env &&
        echo \"LOG_LEVEL=info\" >> .env &&
        echo \"LOGGER_MORGAN_FORMAT_ADD_REMOTE=true\" >> .env &&

        # Add rights
        chmod 600 .env &&

        # Rebuild and start containers
        docker compose -f docker-compose.yml -f docker-compose.production.yml up -d --build
      "
  only:
    - main
  when: manual
  environment:
    name: production
    url: https://cscloud8-46.lnu.se
